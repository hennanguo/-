#include<iostream>
#include<cmath>
#include <iomanip>
#include<stdlib.h>
#include"string.h"
#include <ctime>
#define maxsize 1024
using namespace std;
typedef struct
{
    float data[maxsize];
    int top;
} Stack1;
void Initstack1(Stack1 *S)
{
    S = (Stack1*)malloc(sizeof(Stack1));
    S->top = -1;
}
int Push1(Stack1 *S, float ch)
{
    if (S->top == maxsize - 1)
        return 0;
    else
    {
        S->top++;
        S->data[S->top] = ch;
        return 1;
    }
}//入栈Push
int Pop1(Stack1 *S, float ch)
{
    if (S->top == -1)
        cout<<"栈上溢出!\n";
    else
        ch = S->data[S->top];
    S->top--;
    return 1;
}//出栈
typedef struct
{
    char data[maxsize];
    int top;
} Stack2;
void Initstack2(Stack2 *S)
{
    S = (Stack2*)malloc(sizeof(Stack2));
    S->top = -1;
}
int Push2(Stack2 *S, char ch)
{
    if (S->top == maxsize - 1)
        return 0;
    else
    {
        S->top++;
        S->data[S->top] = ch;
        return 1;
    }
}//入栈Push
int Pop2(Stack2 *S, char ch)
{
    if (S->top == -1)
        cout<<"栈上溢出!\n";
    else
        ch = S->data[S->top];
    S->top--;
    return 1;
}//出栈
int Comop(char ch) //判断是否是运算符
{
    switch (ch)
    {
    case'+':
    case'-':
    case'*':
    case'/':
    case'(':
    case')':
    case'#':
        return 1;
    default:
        return 0;
    }
}//判断ch是否为运算符
char Prior[7][7] =
{
    // 运算符优先级表
    // '+' '-'   '*'  '/'  '('  ')'  '#'
    /*'+'*/{ '>', '>', '<', '<', '<', '>', '>' },
    /*'-'*/{ '>', '>', '<', '<', '<', '>', '>' },
    /*'*'*/{ '>', '>', '>', '>', '<', '>', '>' },
    /*'/'*/{ '>', '>', '>', '>', '<', '>', '>' },
    /*'('*/{ '<', '<', '<', '<', '<', '=', '< ' },
    /*')'*/{ '>', '>', '>', '>', ' ', '>', '>' },
    /*'#'*/{ '<', '<', '<', '<', '<', '> ', '=' },
};
int Opid(char op1)
{
    switch (op1)
    {
    case'+':
        return 0;
    case'-':
        return 1;
    case'*':
        return 2;
    case'/':
        return 3;
    case'(':
        return 4;
    case')':
        return 5;
    case'#':
        return 6;
    default:
        return -123456;
    }
}
char Precede(char op1, char op2)  //优先级比较
{
    int a, b;
    a = Opid(op1);
    b = Opid(op2);
    return(Prior[a][b]);
}
float Operation(float a, char op, float b)
{
    switch (op)
    {
    case '+':
        return b + a;
    case '-':
        return b - a;
    case '*':
        return b * a;
    case '/':
        return b / a;
    default:
        return -123456;
    }
}
void CreateExpression(char *exp)
{

    if (exp == NULL)
    {
        exit(1);
    }
    cin>>exp;
}
void TransmitExpression(char *exp, char postexp[]) //中缀表达式转换后缀表达式
{
    Stack2 FZ;
    Initstack2(&FZ);
    int i = 0;
    char x;
    FZ.top = -1;
    Push2(&FZ, '#');
    FZ.data[FZ.top] = '#';
    while (*exp != '\0')
    {
        if (!Comop(*exp))
        {
            while (*exp >= '0'&&*exp <= '9')//读取一个数字串
            {
                postexp[i++] = *exp;
                exp++;
            }
            postexp[i++] = '#';
        }
        else
            switch (Precede(FZ.data[FZ.top], *exp))
            {
            case'<':
                Push2(&FZ, *exp);
                exp++;
                break;
            case'=':
                x = FZ.data[FZ.top];
                Pop2(&FZ, x);
                exp++;
                break;
            case'>':
                postexp[i++] = FZ.data[FZ.top];
                x = FZ.data[FZ.top];
                Pop2(&FZ, x);
                break;
            }
    }
    while (FZ.data[FZ.top] != '#')
    {
        postexp[i++] = FZ.data[FZ.top];
        x = FZ.data[FZ.top];
        Pop2(&FZ, x);
    }
    postexp[i] = '\0';
}
float EvaluateExpression(char *postexp) //后缀表达式的计算
{
    Stack1 SZ;
    Initstack1(&SZ);
    float a, b, d;
    SZ.top = -1;
    while (*postexp != '\0')
    {
        switch (*postexp)
        {
        case'+':
        case'-':
        case'*':
        case'/':
            a = SZ.data[SZ.top];
            Pop1(&SZ, a);
            b = SZ.data[SZ.top];
            Pop1(&SZ, b);
            Push1(&SZ, Operation(a, *postexp, b));
            break;
        default:
            d = 0;
            while (*postexp >= '0'&&*postexp <= '9')
            {
                d = 10 * d + *postexp - '0';
                postexp++;
            }
            Push1(&SZ, d);
            SZ.data[SZ.top] = d;

            break;
        }
        postexp++;
    }
    return(SZ.data[SZ.top]);
}
int Error(char *exp) //错误表达式判断
{
    int i = 0;
    while (exp[i] != '\0')
    {
        if (
            ((exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/') && (exp[i + 1] == ')'))
            || ((exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/') && (exp[i - 1] == '('))
            || (exp[i] == ')'&&exp[i + 1] == '(')
            || (exp[i] == '('&&exp[i + 1] == ')')
            || ((exp[i] == ')') && exp[i + 1] >= '0'&&exp[i + 1] <= '9')
            || (exp[i] >= '0'&&exp[i] <= '9'&&exp[i + 1] == '(')
            || (exp[0] == '+' || exp[0] == '-' || exp[0] == '*' || exp[0] == '/' || exp[0] == ')')
            || ((exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/') && (exp[i + 1] == '+' || exp[i + 1] == '-' || exp[i + 1] == '*' || exp[i + 1] == '/'))
            || (exp[i] == '/'&&exp[i + 1] == '0')
        )
            return 1;
        else if (exp[i] == '\0')
            return 0;
        i++;
    }
    return 0;
}
void menu()
{
    cout<<"\t\t 输入a开始计算\n";
}
void clear()
{
    system("cls");
    menu();
}
void Quit()
{
    system("cls");
    exit(1);
}
int main()
{
    int num11,num22,num111;
        cout<<"&&&&&&&&&&&&请选择您想进入的系统&&&&&&&&&&&\n"
        <<"*******************************************\n"
        <<"***\t  H            1 加法运算 \t***\n"
        <<"***\t  e            2 减法运算 \t***\n"
        <<"***\t  l            3 乘法运算 \t***\n"
        <<"***\t  l            4 除法运算 \t***\n"
        <<"***\t  o            5 混合四则运算\t***\n"
        <<"***\t  ~            6 挑战100道数学题***\n"
        <<"***\t  ~            7 清屏\t\t***\n"
        <<"***\t  ~            0 退出！  \t***\n"
        <<"*******************************************\n";
    while(1)
    {
        cin>>num111;
        switch(num111)
        {
        case 0:
            cout<<"有空常来做题";
            break;


        case 1:
            cout<<"欢迎来到加法的世界\n"
                <<"请依次输入两个数\n";
            cin>>num11>>num22;
            cout<<"两数之和="<<num11+num22;
            break;
        case 2:
            cout<<"欢迎来到减法的世界\n"
                <<"请依次输入两个数\n";
            cin>>num11>>num22;
            cout<<"两数之差="<<num11-num22;
            break;
        case 6:
            cout<<"欢迎来到挑战一百道数学题\n";
            int k,A,B,R,n;
            char C;
            for(int i=0; i<99; i++)
            {
                k = rand()%4;
                if(k == 0)
                    C = '+';
                else if(k == 1)
                    C = '-';
                else if(k == 2)
                    C = '*';
                else if(k == 3)
                    C = '/';
                srand(time(NULL));
                A=rand()%100;
                B=rand()%100;
                if(C == '+')
                {
                    cout<<A<<"+"<<B<<"=?"<<endl;
                    R=A+B;
                }
                else if(C == '-')
                {
                    cout<<A<<"-"<<B<<"=?"<<endl;
                    R=A-B;
                }
                else if(C == '*')
                {
                    cout<<A<<"*"<<B<<"=?"<<endl;
                    R=A*B;
                }
                else if(C == '/')
                {
                    cout<<"\n"<<A<<"/"<<B<<"=?"<<endl;
                    R= A/B;
                }
                cin>>n;
                if(n==R)
                    continue;
                else
                    cout<<"挑战失败，you are a looser！";
                break;
            }
            break;
        case 3:
            cout<<"欢迎来到乘法的世界\n"
                <<"请依次输入两个数\n";
            cin>>num11>>num22;
            cout<<"两数之积="<<num11*num22;
            break;
        case 4:
            cout<<"欢迎来到除法的世界(默认保留2位小数）\n"
                <<"请依次输入两个数\n";
            cin>>num11>>num22;
            if(num11 < 0 && num22 >0 || num11>0 && num22 < 0)
            cout<<"两数之商="<<fixed<<setprecision(2)<<double(num11)/double(num22);
            else cout<<"两数之商="<<fixed<<setprecision(2)<<double(num11)/double(num22);
            break;
        case 5:
            cout<<"欢迎来到混合四则运算的世界\n";
            char c;
            char exp[maxsize];
            char postexp[maxsize] = { 0 };
            menu();
            cin>>c;
            switch (c)
            {
            case 'a':
sr :
                cout<<"请输入要计算的表达式:\n";
                CreateExpression(exp);
                if (!Error(exp))
                {
                    TransmitExpression(exp, postexp);
                    cout<<exp<<"=";
                    cout<<EvaluateExpression(postexp);
                    break;
                }
                else if (Error(exp))
                {
                    cout<<"您输入的表达式有误！\n";
                    goto sr;//goto语句在循环体里进行跳转
                }

            };

        }

  if(num111 == 7) {system("cls");cout<<"\n"
        <<"&&&&&&&&&&&&请选择您想进入的系统&&&&&&&&&&&\n"
        <<"*******************************************\n"
        <<"***\t  H            1 加法运算 \t***\n"
        <<"***\t  e            2 减法运算 \t***\n"
        <<"***\t  l            3 乘法运算 \t***\n"
        <<"***\t  l            4 除法运算 \t***\n"
        <<"***\t  o            5 混合四则运算\t***\n"
        <<"***\t  ~            6 挑战100道数学题***\n"
        <<"***\t  ~            7 清屏\t\t***\n"
        <<"***\t  ~            0 退出！  \t***\n"
        <<"*******************************************\n";}
  if(num111 == 0)break; } return 0;
}
